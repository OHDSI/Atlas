# Continuous integration, including test and integration test
name: CI Node

# Run in master and dev branches and in all pull requests to those branches
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Build and test the code
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # Compile the code
      - name: Install dependencies
        working-directory: ./radar-app-config-frontend
        run: npm run build

  docker:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      # Add Docker labels and tags
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ohdsi/atlas

      # Setup docker build environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: |
            ${{ steps.docker_meta.outputs.labels }}
            org.opencontainers.image.title="OHDSI ATLAS"
            org.opencontainers.image.authors="Joris Borgdorff <joris@thehyve.nl>, Lee Evans - www.ltscomputingllc.com"
            org.opencontainers.image.description="ATLAS is an open source software tool for researchers \
              to conduct scientific analyses on standardized observational data converted to the \
              OMOP Common Data Model. It is served as a static site by Nginx."
            org.opencontainers.image.licenses="Apache-2.0"
            org.opencontainers.image.vendor="OHDSI"
