# Create release files
name: Release

on:
  release:
    types: [published]

jobs:

  upload:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Cache
        uses: actions/cache@v2.0.0
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: |
            ~/.gradle/caches/jars-3
            ~/.gradle/caches/modules-2/files-2.1/
            ~/.gradle/caches/modules-2/metadata-2.96/
            ~/.gradle/native
            ~/.gradle/wrapper
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-gradle
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Compile the code
      - name: Build code
        run: npm run build:docker

      - name: Make distribution
        run: |
          mkdir atlas
          cp -r LICENSE README.md node_modules js images index.html atlas
          zip -r atlas.zip atlas

      # Upload it to GitHub
      - name: Upload to GitHub
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'atlas.zip'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  docker:
    - uses: actions/checkout@v2
        - name: Docker meta
          id: docker_meta
          uses: crazy-max/ghaction-docker-meta@v1
          with:
            images: ohdsi/atlas
            tag-match: v(.*)
            tag-match-group: 1

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Build and push
          id: docker_build
          uses: docker/build-push-action@v2
          with:
            context: ./
            file: ./Dockerfile
            platforms: linux/amd64,linux/arm/v6,linux/386,linux/ppc64le,linux/s390x
            push: true
            tags: ${{ steps.docker_meta.outputs.labels }}
            labels: |
              ${{ steps.docker_meta.outputs.labels }}
              org.opencontainers.image.title="OHDSI ATLAS"
              org.opencontainers.image.authors="Joris Borgdorff <joris@thehyve.nl>, Lee Evans - www.ltscomputingllc.com"
              org.opencontainers.image.description="ATLAS is an open source software tool for researchers \
                to conduct scientific analyses on standardized observational data converted to the \
                OMOP Common Data Model. It is served as a static site by Nginx."
              org.opencontainers.image.licenses="Apache-2.0"
              org.opencontainers.image.vendor="OHDSI"
